{"version":3,"sources":["UserContext.js","components/ForgotPass.js","components/ResetPass.js","components/Register.js","components/UserLogin.js","components/Dashboard.js","components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","UserProvider","children","useState","username","setUserName","useremail","setUserEmail","Provider","value","ForgotPass","invalidEmail","document","querySelector","validEmail","email","setEmail","history","useHistory","handleSubmit","e","a","preventDefault","fetch","method","body","JSON","stringify","headers","connect","status","res","classList","remove","setTimeout","add","push","className","src","alt","onSubmit","htmlFor","type","id","aria-describedby","required","onChange","target","to","ResetPassword","props","danger","success","unauthorized","newpass","setNewpass","repeatpass","setRepeatpass","undefined","matchPassword","location","pathname","password","RegisterUser","fullname","setFullName","setPassword","UserLogin","userInfo","useContext","json","name","Dashboard","localStorage","setItem","getName","getItem","getEmail","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","NotFound","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e2479c43.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nlet UserContext = React.createContext();\n\nexport default UserContext;\n\nexport const UserProvider = ({ children }) => {\n  const [username, setUserName] = useState(\"\");\n  const [useremail, setUserEmail] = useState(\"\");\n  return (\n    <UserContext.Provider\n      value={{ username, setUserName, useremail, setUserEmail }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction ForgotPass() {\n  const invalidEmail = document.querySelector(\".invalid\");\n  const validEmail = document.querySelector(\".valid\");\n  const [email, setEmail] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const connect = await fetch(\n      \"http://localhost:4000/forgotpassword\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({ email }),\n        headers: { \"Content-type\": \"application/json\" },\n      }\n    );\n    status(connect);\n  };\n\n  const status = (res) => {\n    if (res.status === 200) {\n      validEmail.classList.remove(\"hidden\");\n      setTimeout(() => {\n        validEmail.classList.add(\"hidden\");\n        history.push(\"/\");\n      }, 4000);\n    } else {\n      invalidEmail.classList.remove(\"hidden\");\n      setTimeout(() => {\n        invalidEmail.classList.add(\"hidden\");\n      }, 1000);\n    }\n  };\n\n  return (\n    <div className=\"card card__\">\n      <span className=\"title\">Forgot Password?</span>\n      <div className=\"forgot-img\">\n        <img\n          src=\"/imgs/key.jpg\"\n          className=\"card-img-top real-img\"\n          alt=\"forgotpassword-img\"\n        />\n      </div>\n\n      <div className=\"card-body\">\n        <p className=\"hidden invalid\">\n          <small className=\"text-danger\">\n            Invalid email. Please try again.\n          </small>\n        </p>\n        <p className=\"hidden valid\">\n          <small className=\"text-success\">\n            We have sent you a link on your email. Please check and verify.\n          </small>\n        </p>\n        <form className=\"reset-form\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputEmail\">Username / Email</label>\n            <input\n              type=\"email\"\n              className=\"form-control my-2\"\n              id=\"inputEmail\"\n              aria-describedby=\"emailHelp\"\n              required\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-success my-2\">\n            Reset\n          </button>\n        </form>\n        <div className=\"links\">\n          <Link to={\"/\"} className=\"link\">\n            Sign in\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ForgotPass;\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction ResetPassword(props) {\n  const danger = document.querySelector(\".invalid\");\n  const success = document.querySelector(\".valid\");\n  const unauthorized = document.querySelector(\".unauthorized\");\n  const history = useHistory();\n  const [newpass, setNewpass] = useState(\"\");\n  const [repeatpass, setRepeatpass] = useState(\"\");\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (matchPassword() !== undefined) {\n      const connect = await fetch(\n        `http://localhost:4000${props.location.pathname}`,\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            password: matchPassword(),\n          }),\n          headers: { \"Content-type\": \"application/json\" },\n        }\n      );\n      status(connect);\n    }\n  };\n\n  const matchPassword = () => {\n    if (newpass === repeatpass) {\n      danger.classList.add(\"hidden\");\n      return repeatpass;\n    } else danger.classList.remove(\"hidden\");\n  };\n\n  const status = (res) => {\n    if (res.status === 200) {\n      success.classList.remove(\"hidden\");\n      unauthorized.classList.add(\"hidden\");\n      setTimeout(() => {\n        history.push(\"/\");\n      }, 500);\n    } else {\n      unauthorized.classList.remove(\"hidden\");\n      success.classList.add(\"hidden\");\n    }\n  };\n\n  return (\n    <div className=\"card card__\">\n      <p className=\"title\">Update Password</p>\n      <div className=\"reset-img\">\n        <img\n          src=\"/imgs/key1.jpg\"\n          className=\"card-img-top real-img\"\n          alt=\"reset-password-img\"\n        />\n      </div>\n      <div className=\"card-body\">\n        <p className=\"hidden invalid\">\n          <small className=\"text-danger\">\n            Password do not match. Please try again.\n          </small>\n        </p>\n        <p className=\"hidden valid\">\n          <small className=\"text-success\">\n            You have successfully registered your new password.\n          </small>\n        </p>\n        <p className=\"hidden unauthorized\">\n          <small className=\"text-danger\">\n            Unauthorized Access. Verify your email again.\n          </small>\n        </p>\n        <form className=\"reset-form\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputPass1\">New Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control my-2\"\n              id=\"inputPass1\"\n              aria-describedby=\"passHelp\"\n              required\n              onChange={(e) => setNewpass(e.target.value)}\n            />\n            <label htmlFor=\"inputPass2\">Repeat Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control my-2\"\n              id=\"inputPass2\"\n              aria-describedby=\"passHelp\"\n              required\n              onChange={(e) => setRepeatpass(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-success my-2\">\n            Reset\n          </button>\n        </form>\n        <div className=\"links\">\n          <Link to={\"/forgotpassword\"} className=\"link\">\n            Forgot Password\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ResetPassword;\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction RegisterUser() {\n  const danger = document.querySelector(\".invalid\");\n  const success = document.querySelector(\".valid\");\n  const [fullname, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const connect = await fetch(\n      \"http://localhost:4000/register\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({ fullname, email, password }),\n        headers: { \"Content-type\": \"application/json\" },\n      }\n    );\n    status(connect);\n  };\n\n  const status = (res) => {\n    if (res.status === 200) {\n      danger.classList.add(\"hidden\");\n      success.classList.remove(\"hidden\");\n      setTimeout(() => {\n        history.push(\"/\");\n      }, 1500);\n    } else {\n      danger.classList.remove(\"hidden\");\n      success.classList.add(\"hidden\");\n    }\n  };\n\n  return (\n    <div className=\"card card__\">\n      <p className=\"title\">Sign-up</p>\n      <div className=\"welcome-img\">\n        <img\n          src=\"/imgs/welcome.jpg\"\n          className=\"card-img-top real-img\"\n          alt=\"login-img\"\n        />\n      </div>\n      <div className=\"card-body\">\n        <p className=\"hidden invalid\">\n          <small className=\"text-danger\">\n            User already registered. You may try logging in.\n          </small>\n        </p>\n        <p className=\"hidden valid\">\n          <small className=\"text-success\">Successfully registered.</small>\n        </p>\n        <form className=\"reset-form\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputFullName\">Full Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control my-2\"\n              id=\"inputFullName\"\n              aria-describedby=\"fullName\"\n              required\n              onChange={(e) => setFullName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputEmail\">Email</label>\n            <input\n              type=\"email\"\n              className=\"form-control my-2\"\n              id=\"inputEmail\"\n              aria-describedby=\"emailHelp\"\n              required\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <label htmlFor=\"inputPassword\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control my-2\"\n              id=\"inputPassword\"\n              aria-describedby=\"passHelp\"\n              required\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-success my-2\">\n            Register\n          </button>\n        </form>\n        <div className=\"links\">\n          <Link to={\"/\"} className=\"link\">\n            Login\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RegisterUser;\n","import React, { useContext, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport UserContext from \"../UserContext\";\n\nfunction UserLogin() {\n  const danger = document.querySelector(\".invalid\");\n  const userInfo = useContext(UserContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const connect = await fetch(\n      \"http://localhost:4000/login\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({ email, password }),\n        headers: { \"Content-type\": \"application/json\" },\n      }\n    );\n    if (connect.status === 200) history.push(\"/dashboard\");\n    const res = await connect.json();\n    userInfo.setUserName(res.name);\n    userInfo.setUserEmail(res.email);\n    status(connect);\n  };\n\n  const status = (res) => {\n    if (res.status === 200) danger.classList.add(\"hidden\");\n    else danger.classList.remove(\"hidden\");\n  };\n\n  return (\n    <div className=\"card card__\">\n      <p className=\"title\">Sign-in</p>\n      <div className=\"login-img\">\n        <img\n        \n          src=\"\\imgs\\hello.jpg\"\n          className=\"card-img-top real-img\"\n          alt=\"login-img\"\n        />\n      </div>\n      <div className=\"card-body\">\n        <p className=\"hidden invalid\">\n          <small className=\"text-danger\">Invalid username or password</small>\n        </p>\n        <form className=\"reset-form\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputEmail\">Username / Email</label>\n            <input\n              type=\"email\"\n              className=\"form-control my-2\"\n              id=\"inputEmail\"\n              aria-describedby=\"emailHelp\"\n              required\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <label htmlFor=\"inputPassword\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control my-2\"\n              id=\"inputPassword\"\n              aria-describedby=\"passHelp\"\n              required\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-success my-2\">\n            Login\n          </button>\n        </form>\n        <div className=\"links\">\n          <Link to={\"/forgot-password\"} className=\"link\">\n            Forgot Password\n          </Link>\n          <Link to={\"/register\"} className=\"link\">\n            Sign up\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserLogin;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../UserContext\";\n\nfunction Dashboard() {\n  const history = useHistory();\n  const { username, useremail } = useContext(UserContext);\n\n  // Log in\n  if (username !== \"\") {\n    localStorage.setItem(\"username\", username);\n    localStorage.setItem(\"useremail\", useremail);\n  }\n  const getName = localStorage.getItem(\"username\");\n  const getEmail = localStorage.getItem(\"useremail\");\n\n  // log out\n  const logOut = () => {\n    localStorage.setItem(\"username\", \"Guest User\");\n    localStorage.setItem(\"useremail\", \"\");\n    history.push(\"/\");\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-success\">\n      <div className=\"container\">\n        <span className=\"navbar-brand\">Welcome, {getName}</span>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item active \">\n              <span className=\"nav-link\"> {getEmail}</span>\n            </li>\n            <li className=\"nav-item\">\n              <button\n                type=\"button\"\n                className=\"nav-link text-white btn btn-danger\"\n                id=\"signout\"\n                onClick={logOut}\n              >\n                Sign out\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Dashboard;\n","function NotFound() {\n  return (\n    <>\n      <div className=\"text-center mt-5 text-white\">\n        <h1 className=\"h2 text-white\">404</h1>\n        <p className=\"h3 text-white\">Page Not Found!</p>\n      </div>\n    </>\n  );\n}\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { UserProvider } from \"./UserContext\";\nimport ForgotPass from \"./components/ForgotPass\";\nimport ResetPassword from \"./components/ResetPass\";\nimport RegisterUser from \"./components/Register\";\nimport UserLogin from \"./components/UserLogin\";\nimport Dashboard from \"./components/Dashboard\";\nimport NotFound from \"./components/NotFound\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container px-0\">\n        <UserProvider>\n          <Switch>\n            <Route\n              path=\"/register\"\n              component={RegisterUser}\n              exact={true}\n            ></Route>\n            <Route path=\"/dashboard\" component={Dashboard} exact={true}></Route>\n            <Route\n              path=\"/forgot-password\"\n              component={ForgotPass}\n              exact={true}\n            ></Route>\n            <Route\n              path=\"/reset-password/:randomstring\"\n              component={ResetPassword}\n              exact={true}\n            ></Route>\n            <Route path=\"/\" component={UserLogin} exact={true}></Route>\n            <Route path=\"*\" component={NotFound}></Route>\n          </Switch>\n        </UserProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}